;
; File generated by cc65 v 2.18 - Git f8be35b4
;
	.fopt		compiler,"cc65 v 2.18 - Git f8be35b4"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_rand
	.export		_drawTest
	.export		_draw
	.export		_drawLine
	.export		_main

; ---------------------------------------------------------------
; void __near__ drawTest (int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_drawTest: near

.segment	"CODE"

	jsr     pusha
	ldy     #$09
	jsr     subysp
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	cmp     #$00
	jsr     booleq
	jeq     L0284
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
	jmp     L0293
L0284:	ldy     #$09
	ldx     #$00
	lda     (sp),y
	cmp     #$01
	jsr     booleq
	jeq     L0289
	ldx     #$00
	lda     #$55
	ldy     #$00
	sta     (sp),y
	jmp     L0293
L0289:	ldy     #$09
	ldx     #$00
	lda     (sp),y
	cmp     #$02
	jsr     booleq
	jeq     L028E
	ldx     #$00
	lda     #$AA
	ldy     #$00
	sta     (sp),y
	jmp     L0293
L028E:	ldy     #$09
	ldx     #$00
	lda     (sp),y
	cmp     #$03
	jsr     booleq
	jeq     L0293
	ldx     #$00
	lda     #$FF
	ldy     #$00
	sta     (sp),y
L0293:	ldx     #$60
	lda     #$14
	ldy     #$01
	jsr     staxysp
	ldy     #$0D
	jsr     ldaxysp
	jsr     asrax4
	ldy     #$07
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	jmp     L029C
L029C:	cpx     #$00
	jne     L029D
	cmp     #$01
	jeq     L029F
	cmp     #$02
	jeq     L02A3
	cmp     #$03
	jeq     L02A7
	cmp     #$04
	jeq     L02AB
	cmp     #$05
	jeq     L02AF
	cmp     #$06
	jeq     L02B3
	jmp     L029D
	jmp     L029D
L029F:	ldy     #$01
	ldx     #$02
	lda     #$80
	jsr     addeqysp
	jmp     L029D
L02A3:	ldy     #$01
	ldx     #$05
	lda     #$00
	jsr     addeqysp
	jmp     L029D
L02A7:	ldy     #$01
	ldx     #$07
	lda     #$80
	jsr     addeqysp
	jmp     L029D
L02AB:	ldy     #$01
	ldx     #$0A
	lda     #$00
	jsr     addeqysp
	jmp     L029D
L02AF:	ldy     #$01
	ldx     #$0C
	lda     #$80
	jsr     addeqysp
	jmp     L029D
L02B3:	ldy     #$01
	ldx     #$0F
	lda     #$00
	jsr     addeqysp
	jmp     L029D
L029D:	ldy     #$0D
	jsr     ldaxysp
	jsr     aslax2
	ldy     #$01
	jsr     addeqysp
	ldx     #$00
	lda     #$00
	ldy     #$03
	jsr     staxysp
L02B8:	ldy     #$04
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L02BF
	eor     #$80
L02BF:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L02BB
	jmp     L02B9
L02BB:	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$01
	ldx     #$00
	lda     #$24
	jsr     addeqysp
	ldy     #$04
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$03
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L02B8
L02B9:	ldy     #$0E
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ draw (int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw: near

.segment	"CODE"

	jsr     pusha
	jsr     incsp5
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ drawLine (int, int, int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_drawLine: near

.segment	"CODE"

	jsr     pusha
	ldy     #$12
	jsr     subysp
	ldx     #$60
	lda     #$14
	ldy     #$00
	jsr     staxysp
	ldy     #$1A
	jsr     ldaxysp
	jsr     pushax
	ldy     #$18
	jsr     ldaxysp
	jsr     toseqax
	jeq     L02D2
	ldy     #$18
	jsr     ldaxysp
	jsr     pushax
	ldy     #$16
	jsr     ldaxysp
	jsr     tosgtax
	jeq     L02D4
	ldy     #$18
	jsr     ldaxysp
	ldy     #$0E
	jsr     staxysp
	ldy     #$1A
	jsr     ldaxysp
	ldy     #$10
	jsr     staxysp
	ldy     #$14
	jsr     ldaxysp
	ldy     #$17
	jsr     staxysp
	ldy     #$16
	jsr     ldaxysp
	ldy     #$19
	jsr     staxysp
	ldy     #$0F
	jsr     ldaxysp
	ldy     #$13
	jsr     staxysp
	ldy     #$11
	jsr     ldaxysp
	ldy     #$15
	jsr     staxysp
L02D4:	ldy     #$18
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$28
	jsr     tosmulax
	jsr     pushax
	ldy     #$1C
	jsr     ldaxysp
	jsr     asrax2
	jsr     tosaddax
	ldy     #$00
	jsr     addeqysp
	ldy     #$1A
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmodax
	ldy     #$0A
	jsr     staxysp
	ldy     #$12
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     aslax1
	jsr     tossubax
	jsr     tosaslax
	ldy     #$06
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$0C
	jsr     staxysp
L02EB:	ldy     #$0D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$16
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1C
	jsr     ldaxysp
	jsr     tossubax
	jsr     tosltax
	jne     L02EE
	jmp     L02EC
L02EE:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$00
	ldx     #$00
	lda     #$28
	jsr     addeqysp
	ldy     #$0D
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$0C
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L02EB
L02EC:	jmp     L02F9
L02D2:	ldy     #$18
	jsr     ldaxysp
	jsr     pushax
	ldy     #$16
	jsr     ldaxysp
	jsr     toseqax
	jeq     L02F9
	ldy     #$1A
	jsr     ldaxysp
	jsr     pushax
	ldy     #$18
	jsr     ldaxysp
	jsr     tosgtax
	jeq     L02FB
	ldy     #$1A
	jsr     ldaxysp
	ldy     #$10
	jsr     staxysp
	ldy     #$14
	jsr     ldaxysp
	ldy     #$0E
	jsr     staxysp
	ldy     #$16
	jsr     ldaxysp
	ldy     #$19
	jsr     staxysp
	ldy     #$14
	jsr     ldaxysp
	ldy     #$17
	jsr     staxysp
	ldy     #$11
	jsr     ldaxysp
	ldy     #$15
	jsr     staxysp
	ldy     #$0F
	jsr     ldaxysp
	ldy     #$13
	jsr     staxysp
L02FB:	ldy     #$1A
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmodax
	ldy     #$0A
	jsr     staxysp
	ldy     #$16
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmodax
	ldy     #$08
	jsr     staxysp
	ldy     #$18
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$28
	jsr     tosmulax
	jsr     pushax
	ldy     #$1C
	jsr     ldaxysp
	jsr     asrax2
	jsr     tosaddax
	ldy     #$00
	jsr     addeqysp
	ldy     #$12
	ldx     #$00
	lda     (sp),y
	jsr     aslax4
	jsr     aslax2
	jsr     pushax
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	jsr     aslax4
	jsr     tosorax
	jsr     pushax
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	jsr     aslax2
	jsr     tosorax
	jsr     pushax
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	jsr     tosorax
	ldy     #$06
	jsr     staxysp
	ldy     #$07
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	ldy     #$02
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$FF
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosasrax
	jsr     tosandax
	ldy     #$04
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$FF
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     aslax1
	jsr     tossubax
	jsr     tosaslax
	jsr     tosandax
	ldy     #$02
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldx     #$00
	lda     #$00
	ldy     #$0C
	jsr     staxysp
L0322:	ldy     #$0D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$18
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1E
	jsr     ldaxysp
	jsr     tossubax
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmodax
	jsr     tosltax
	jne     L0325
	jmp     L0323
L0325:	ldy     #$01
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$0D
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$0C
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L0322
L0323:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
L02F9:	ldy     #$1B
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"RODATA"

L0126:
	.byte	$00,$30,$69,$78,$65,$6C,$27,$61,$6D,$65,$25,$6E,$67,$69,$6E,$65
	.byte	$00,$12,$0E,$10,$00,$40
L0129:
	.byte	$70
	.byte	$70
	.byte	$47
	.byte	$00
	.byte	$60
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$4D
	.byte	$14
	.byte	$6A
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$00
	.byte	$00
	.res	12,$00

.segment	"CODE"

	ldy     #$1C
	jsr     subysp
	ldy     #$15
L0127:	lda     L0126,y
	sta     (sp),y
	dey
	bpl     L0127
	ldy     #$96
	jsr     subysp
	ldy     #$00
L023E:	lda     L0129,y
	sta     (sp),y
	iny
	cpy     #$96
	bne     L023E
	lda     sp
	ldx     sp+1
	ldx     #$00
	ldx     #$00
	ldx     #$00
	ldy     #$8B
	sta     (sp),y
	lda     sp
	ldx     sp+1
	ldx     #$00
	cpx     #$80
	txa
	ldx     #$00
	bcc     L0247
	dex
L0247:	ldx     #$00
	ldy     #$8C
	sta     (sp),y
	lda     sp
	ldx     sp+1
	sta     $0230
	stx     $0230+1
	ldx     #$60
	lda     #$00
	ldy     #$B0
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$AE
	jsr     staxysp
L024D:	ldy     #$AF
	jsr     ldaxysp
	cmp     #$90
	txa
	sbc     #$01
	bvc     L0254
	eor     #$80
L0254:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0250
	jmp     L024E
L0250:	ldy     #$B1
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$B0
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldx     #$00
	lda     #$41
	ldy     #$00
	jsr     staspidx
	ldy     #$AF
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$AE
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L024D
L024E:	ldx     #$60
	lda     #$00
	ldy     #$B0
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$AE
	jsr     staxysp
L025B:	ldy     #$AF
	jsr     ldaxysp
	cmp     #$14
	txa
	sbc     #$00
	bvc     L0262
	eor     #$80
L0262:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L025E
	jmp     L025C
L025E:	ldy     #$B1
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$B0
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     #$98
	jsr     leaa0sp
	ldy     #$B0
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	ldy     #$00
	jsr     ldauidx
	ldy     #$00
	jsr     staspidx
	ldy     #$AF
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$AE
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L025B
L025C:	jmp     L026D
L0268:	ldx     #$00
	lda     #$00
	ldy     #$AE
	jsr     staxysp
L026C:	ldy     #$AF
	jsr     ldaxysp
	cmp     #$0A
	txa
	sbc     #$00
	bvc     L0273
	eor     #$80
L0273:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L026F
	jmp     L026D
L026F:	ldx     #$00
	lda     #$00
	ldy     #$AC
	jsr     staxysp
L0275:	ldy     #$AD
	jsr     ldaxysp
	cmp     #$07
	txa
	sbc     #$00
	bvc     L027C
	eor     #$80
L027C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0278
	jmp     L026E
L0278:	ldy     #$AF
	jsr     ldaxysp
	jsr     pushax
	ldy     #$AF
	jsr     ldaxysp
	jsr     pushax
	jsr     _rand
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmodax
	ldx     #$00
	jsr     _drawTest
	ldy     #$AD
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$AC
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L0275
L026E:	ldy     #$AF
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$AE
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L026C
L026D:	jmp     L0268
	ldx     #$00
	lda     #$00
	jmp     L0124
L0124:	ldy     #$B2
	jsr     addysp
	rts

.endproc

